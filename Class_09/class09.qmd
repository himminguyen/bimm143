---
title: "Class 09: PDB Database"
author: "Jimmi Nguyen"
format: pdf
---
# What is in the PDB anyways?

The main database of biomolecular structures is called the PDB and is available at www.rcsb.org

Lets begin by seeing what is in this data base:

```{r}
pdbstats = read.csv("PDB.csv", row.names=1)
head(pdbstats)
```

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
# Deal with the comma making these non numeric
n.xray = sum( as.numeric( gsub(",","", pdbstats$X.ray) ) )
n.em = sum( as.numeric( gsub(",","", pdbstats$EM) ) )
n.total = sum( as.numeric( gsub(",","", pdbstats$Total) ) )

p.xray = (n.xray/n.total)*100
p.em = (n.em/n.total)*100

# and to 2 s.f
round(p.xray,3)
round(p.em,2)

```

There are `r n.xray` protein structures (`r round(p.xray,3)`%) and `r n.em` (`r round(p.em,2)`%) EM structures in the current PDC database.

>Q2: What proportion of structures in the PDB are protein?

```{r}
pro = (as.numeric( gsub(",","", pdbstats$Total[1]) ) / n.total)*100
round(pro,2)
```
The proportion of structures in the PDB that are protein is `r round(pro,2)`%.

>Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

It is not straightforward to find all HIV-1 protease structures using plain text searching on the database.

A wee pic of HIV-1 Protease from Molstar

![](1HSG.png)

![A image I like whilst learning how to break Molstar](1HSG.png)

## Working with structure data in R

We will use the `bio3d` package for this:

```{r}
library(bio3d)
```

Read a PDB file

```{r}
pdb <- read.pdb("1hsg")
pdb
```

```{r}
head(pdb$atom)
```

What is the first residue 3 letter code?

```{r}
pdb$atom$resid[1]
```

>Q7: How many amino acid residues are there in this pdb object? 

198

>Q8: Name one of the two non-protein residues? 

HOH

>Q9: How many protein chains are in this structure? 

2

## Predicting functional motions of a single structure

Let's read a new PDB structure of Adenylate Kinase (PDB code: 6s36) and perform Normal mode analysis.

```{r}
adk = read.pdb("6s36")
adk
```

Normal mode analysis (NMA) is a structureal bioinformatics method to predict protein flexibility and potential functional motions (a.k.a conformational changes).

```{r}
m = nma(adk)
```

```{r}
mktrj(m, file="adk_m7.pdb")
```

# Section 4. Comparative Structure Analysis

Today we are continuing where we left off last day building towards completing the loop from biomolecular structural data to our new analysis methods like PCA and clustering.

We begin with getting a single protein sequence for a protein family of interest.

```{r}
library(bio3d)

aa = get.seq("1ake_A")
aa
```

>Q10. Which of the packages above is found only on BioConductor and not CRAN? 

msa

>Q11. Which of the above packages is not found on BioConductor or CRAN?: 

bio3d.view

>Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket? 

TRUE


>Q13. How many amino acids are in this sequence, i.e. how long is this sequence? 

214

Now we can us this sequence as a query to BLAST search the PDB to find similar sequences and structures.

```{r}
#Blast or hmmer search
#b = blast.pdb(aa)
```

I could save and load my blast results next time so I don't need to run the search every time.

```{r}
#saveRDS(b, file="Blast_results.RDS")
```

```{r}
b = readRDS("Blast_results.RDS")
```

A summary plot of our BLAST results
```{r}
hits = plot(b)
```

```{r}
hits$pdb.id
```

```{r}
# Download releated PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

Next, we are going to align and superimpose all these structures.

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
pdbs
```

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
#plot(pdbs, labels=ids)
```

And collect annotation for each entry

Time for PCA. We will use not the `prcomp()` function from base R but the `pca()` function from the `bio3d` package as this one is designed t work nicely with biomolecular data.

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
```

```{r}
head(anno)
```

```{r}
pc.xray = pca(pdbs)
plot(pc.xray)
```

We can now focus in on PC1 vs PC2

```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```

To visualize the major structural variations in the ensemble the function `mktrj()` can be used to generate a trajectory PDB file by interpolating along a given PC (eigenvector):

```{r}
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

We can now open this trajectory file in Molstar to view a wee movie of the major differences (i.e. displacements) in the structure set as we move along PC1.





